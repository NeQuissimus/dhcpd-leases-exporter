stages:
  - test
  - build_and_push

test:integration:
  image: python:3.7-slim-buster
  stage: test
  script:
  - apt-get update && apt-get -y install make
  - make integrationtests

pylint:
  stage: test
  image: python:3-slim
  before_script:
    - apt-get update && apt-get -y install make
    - make venv-pylint
  script:
    - mkdir ./pylint
    - venv/bin/pylint --output-format=text fail2ban_exporter.py | tee ./pylint/pylint.log || venv/bin/pylint-exit $?
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - venv/bin/anybadge --label=Pylint --file=pylint/pylint.svg --value=${PYLINT_SCORE} 2=red 4=orange 8=yellow 10=green
    - echo "Pylint score is $PYLINT_SCORE"
  artifacts:
    paths:
      - ./pylint/

build_and_push:push
  image: docker:latest
  services:
    - docker:dind
  stage: build_and_push
  tags:
    - docker
  script:
    - export IMAGE_VERSION=${CI_COMMIT_TAG:-latest}
    - docker build -t $CI_REGISTRY_IMAGE:$IMAGE_VERSION .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com      
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_VERSION
  only:
    - master
    - tags

